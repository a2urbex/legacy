{% extends '@EasyAdmin/page/content.html.twig' %}
{% block title %}a2urbex!{% endblock %}
{% block content %}
		<link rel="manifest" href="{{ ('manifest.json') }}">
		<script src="{{ ('assets/js/notifications.js') }}"></script>
		<script src="{{ ('assets/js/registersw.js') }}"></script>

	<section class="heading-part text-center">
		<div class="container">
			<h1 class="jumbotron-heading">Hey {{app.user.firstname}}!</h1><br>
			<p class="lead text-muted">Currently <b>{{pins}}</b> pins, located in <b>{{country}}</b> country and sorted in <b>{{type}}</b> categories</p>
		</div>
	</section>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js" integrity="sha512-pumBsjNRGGqkPzKHndZMaAG+bir374sORyzM3uulLV14lN5LyykqNk8eEeUlUkB3U0M4FApyaHraT65ihJhDpQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    const socketStatus = new WebSocket("{{ websocket }}");
    socketStatus.addEventListener("open", function() {
        console.log("Connected to Status Websocket");
    });
    function addMessage(progression) {
        const messageHTML = renderRow(progression)
    }
    socketStatus.addEventListener("message", function(e) {
        try
        {   const message = JSON.parse(e.data);
            addMessage(message.progression);}
        catch(e)
        {}
    });


    function renderRow(progression) {
       const progressBar = document.querySelector('.progress-bar');
       const progressText = document.querySelector('.progress-percent');
        progressBar.style.width = progression + '%';
        progressText.textContent = Math.floor(progression * 100) / 100 + '%';
    }


document.addEventListener('DOMContentLoaded', () => {
  const startButton = document.getElementById('fetch-pinterest')

  startButton.addEventListener('click', () => {
    const progressText = document.querySelector('.progress-percent')
    progressText.textContent = 'Starting...'
    const textUrl = 'data/pin.txt'
    let lastValue = null

    function handleNewLines(value) {
      const message = {
        progression: value,
      }
      socketStatus.send(JSON.stringify(message))
      addMessage(message.progression)
    }

    setInterval(() => {
      const xhr = new XMLHttpRequest()
      xhr.open('GET', textUrl)
      xhr.responseType = 'text'
      xhr.setRequestHeader("Cache-Control", "max-age=0");
      xhr.onload = () => {
        if (xhr.status === 200) {
          const value = xhr.responseText
          if (value !== lastValue) {
            lastValue = value
            handleNewLines(value)
          }
        }
      }
      xhr.send()
    }, 1000)
  })
})

</script>



{# Fetch #}
	<section class="fetch-part text-center">
		<div class="container">
		<div class="last">
		<div>
			<p class="text-muted">Current time : <br> <div class="time">{{current_time}}</div></p></div>
			<div class="updated"><p class="text-muted ">Last Updated : <br> <div class="time">{{last_updated}}</div></p></div>
		</div>
			<p class="text-muted">Last Fetched : <br> <div class="time">{{last_fetched}}</div></p>
      <p>
			  <button class="action-new btn btn-success" id="fetch-pinterest">Fetch Pinterest</button>
      </p>
      <div class="seperator"></div>
      <p>
        <a class="action-new btn btn-success" href="{{ path('app_fetch_wikimapia') }}">Fetch Wikimapia</a>
        <a class="action-new btn btn-warning" href="{{ path('app_fetch_wikimapia_pending') }}">Fetch Pending</a> ({{pending}})
      </p>
      <div class="seperator"></div>
      <p>
        <a class="action-new btn btn-primary" href="{{ path('app_update') }}">Update</a>
        <a class="action-new btn btn-warning" href="{{ path('app_patch') }}">Patch</a>
      </p>

      <p class="progress-percent">Waiting...</p>
      <div class="progress-bar-wrapper"><div class="progress-bar"></div></div>
		</div>

		<div class="output-area">
		<p class="text-muted">Output : </b></p>
		<div class="output">
		<p>BoardId = {{board}}<br>
		Status = {{finished}}<br>
		Error = {{error}}<br>
		Total Parsed = {{total}}<br>
		NewPins = {{newpins}}<br>---------</p>
		Key = {{token}}
		</div>
    <div class="check">
    <a href="{{ path('app_check_count') }}" class="btn btn-secondary">Check</a><p>Waiting to be imported : {{remaining}}</p>
    </div>
		</div>
    
	</section>

{# Chat #}
<section class="fetch-part text-center">
<div class="container">
		<div>
			<p class="text-muted">General Chat : <br></p>
		</div>
<a class="btn btn-danger" href="{{ path('clear_chat')}}">Clear Chat</a>
<div class="adminsender">
<input type="text" id="message" placeholder="Server Restart.."> </input>
<button class="btn btn-primary" id="message_admin">Send</button>
</div>
</div>
<div class="output-area">
		<p class="text-muted">Server Status : </b></p>
<p class="websocket_online" style="display: none;">Online running on : <div class="output">{{ websocket }}</div></p>
<p class="websocket_offline">Currently Offline.. </p>
		</div>
</section>

{# Import #}
	<section class="fetch-part text-center">
		<div class="container">
		<div class="last">
		<div>
			<p class="text-muted">Import File : <br></p></div>
		</div>
			<a class="action-new btn btn-success" href="{{ path('upload')}}">Import File</a>
			<a class="btn btn-primary run-target" href="#" >Run</a>
			<a class="btn btn-danger delete-target" href="#">Delete</a>
		</div>
		<div class="output-area">
		<p class="text-muted">Sources ({{uploads_count}}) : </b></p>
		<select class="output-uploads">
		{% for item in uploads %}
		<option value="{{item.id}}">{{item.Name}}</option>
		{% endfor %}
		</select>
		</div>
	</section>

{# Ai Generation #}
<section class="fetch-part text-center">
<div class="container">
		<div>
			<p class="text-muted">Ai Generation ({{to_be_generated}} locations are waiting to be processed): <br></p>
		</div>
<div class="generated">{{ai}} locations already generated</div>
<a class="btn btn-success {{stable_status_current}}" href="{{ path('app_image_generation')}}">Generate</a>
<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" class="btn btn-secondary" target="_blank"> Documentation</a> 

</div>
<div class="output-area">
		<p class="text-muted">Server Status : </b></p>
		{{ stable_status|raw}}
		</div>
</section>

{# Clear cache #}
<section class="fetch-part text-center">
<div class="container">
		<div>
			<p class="text-muted">Cache : <br></p>
		</div>
<button class="btn btn-danger" id="clear-cache-button">Clear Cache</button>
</div>


{# Database Download #}
<div class="output-area">
		<p class="text-muted">Database : </b></p>
<a href="{{ path('download_database') }}" class="btn btn-secondary " style="pointer-events:none;">Download Database</a>

</div>
</section>

{# Stylesheets #}

<style>

.check {
    display: flex;
    margin-top: 10px;
    flex-direction: row;
}
.check > a{
      height: fit-content;
}
.check > p {
      margin-top: 3px;
      margin-left:5px;
      color: #7b7b7b;
}

.progress-bar-wrapper {
    border-radius: 31px;
    width: 100%;
    height: 8px;
    border: 1px #545454 solid;
    overflow: hidden;

}
.progress-bar {
    border-radius: 50px;
    background-color: #60A5FA;
    height: 100%;
    width:0%;
    transition: width 1s ease-in-out;
}

p.progress-percent {
    color: #707070;
    margin: auto;
    text-align: center;
    font-weight: 500;
    margin-top: 20px;
    margin-bottom: 5px;
}

.adminsender {
    margin-top: 20px;
}
button#message_admin {
    margin-top: -4px;
}


a.btn.btn-success.off {
    opacity: 0.6;
	cursor:not-allowed;
    pointer-events: none;
}
a.btn.btn-success.off:hover {
	cursor:not-allowed;
}
.seperator {
    background-color: #404040;
    width: 100%;
    border-radius: 10px;
    height: 1px;
    margin: 10px 0px 10px 0px;
}

.generated{
	    padding-left: 4px;
    padding-right: 4px;
    padding-bottom: 1px;
    border-radius: 5px;
    font-size: 11px;
    background-color: var(--form-control-bg);
    border: 1px solid var(--form-input-border-color);
    height: fit-content;
    width: fit-content;
	margin-bottom:15px;
}
p.offline {
    display: inline-block;
}
.offline::before{
	content:'';
	display: inherit;
	width: 10px;
    height: 10px;
	margin-right:10px;
    background-color: red;
    border-radius: 50px;
}
p.online {
    display: inline-block;
	margin-left:5px;
}
.online::before{
	content:'';
	display: inherit;
	width: 10px;
    height: 10px;
	margin-right:10px;
    background-color: red;
    background-color: green;
    border-radius: 50px;
}

.last{
	display:flex;
}
.content-wrapper{ 
	margin: auto;
}

.content-wrapper{
	display:block;
}
.updated{
	margin-left:50px
}
.heading-part{
	width:100%;
    padding: 2rem;
    margin-top: 1rem;
    border-radius: 8px;
    height: fit-content;
}
.fetch-part{
	display: flex;
	width:100%;
    padding: 2rem;
    margin-top: 1rem;
    border: 1px solid var(--sidebar-border-color);
    border-radius: 8px;
    height: fit-content;
}
.fetch-part > .container{
	width: 50%;
	padding-right: 40px;
    text-align: left;
	border-right:1px solid var(--sidebar-border-color);
}

.time{
    padding-left: 4px;
    padding-right: 4px;
	padding-bottom : 1px;
    border-radius: 5px;
    font-size: 11px;
    background-color: var(--form-control-bg);
    border: 1px solid var(--form-input-border-color);
    height: fit-content;
    width: fit-content;
}
.output-area{
	width: 50%;
	padding-left: 40px;
    text-align: left;
}
.output{
	overflow: hidden;
	background-color: var(--form-control-bg);
	border : 1px solid var(--form-input-border-color);
    padding: 8px;
    border-radius: 5px;
    font-size: 11px;
    height: fit-content;
}

input.delete-target-source {
    width: 100%;
    color: white;
     font-size: 11px;
    padding: 8px;
}
@media screen and (max-width: 550px) {
  .fetch-part > .container {
	width: 100%;
	border-right:none;
	border-bottom:1px solid var(--sidebar-border-color);
	padding : 12px;
	padding-bottom: 30px;
	padding-right: 0px;
  }
  .output-area {
	--bs-gutter-x: 1.5rem;
	width: 100%;
	padding: 12px;
	padding-top:20px;
  }
  .fetch-part{
  display:block;
  }
  .last{
	justify-content: space-between;
}
.updated{
	margin-left:0px
}
}
.output-uploads{
    overflow: hidden;
    background-color: var(--form-control-bg);
    border: 1px solid var(--form-input-border-color);
    border-radius: 5px;
    font-size: 11px;
    width: 100%;
    height: fit-content;
    padding: 8px;
	text-transform: capitalize;
}

.cache {
    text-align: left;
    margin: 0;
    border-right: 0px!important;
}

.websocket_offline::before {
    content: '';
    display: inherit;
    width: 10px;
    height: 10px;
    margin-right: 10px;
    background-color: red;
    border-radius: 50px;
}
.websocket_online::before {
    content: '';
    display: inherit;
    width: 10px;
    height: 10px;
    margin-right: 10px;
    background-color: green;
    border-radius: 50px;
}
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.3/jquery.min.js" integrity="sha512-STof4xm1wgkfm7heWqFJVn58Hm3EtS31XFaagaa8VMReCXAkQnJZ+jEy8PCC/iT18dFy95WcExNHFTqLyp72eQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
$(function () {
  $(document).attr('title', '@a2urbex')
})
var meta = $('<meta>').attr({
  name: 'apple-mobile-web-app-status-bar-style',
  content: 'default',
})
var link = $('<link>').attr({
  rel: 'manifest',
  href: '{{ ('manifest.json') }}',
})
$('head').append(meta, link)

$(document).ready(function () {
  $('.delete-target').click(function () {
    var target_name = $('.output-uploads :selected').text()
    var target_to_delete = 'delete/' + target_name
    if (confirm('Delete ' + target_name + ' source ?')) {
      $('.delete-target').attr('href', target_to_delete)
    }
  })
})

$(document).ready(function () {
  $('.run-target').click(function () {
    var target_name = $('.output-uploads :selected').text()
    var target_id = $('.output-uploads :selected').val()
    var target_import_link = 'import/' + target_id
    if (confirm('Run for ' + target_name + ' ?')) {
      $('.run-target').attr('href', target_import_link)
    }
  })
})

const clearCacheButton = document.getElementById('clear-cache-button')
clearCacheButton.addEventListener('click', async () => {
  try {
    await caches.delete('a2urbex')
    console.log('Cache deleted successfully')
    location.reload(true)
  } catch (err) {
    console.error('Error deleting cache:', err)
  }
})

const socket = new WebSocket('{{ websocket }}')

socket.addEventListener('open', function () {
  console.log('CONNECTED')
  document.querySelector('.websocket_online').style.display = 'inline-block'
  document.querySelector('.websocket_offline').style.display = 'none'
})

socket.addEventListener('close', function () {
  console.log('DISCONNECTED')
  document.querySelector('.websocket_online').style.display = 'none'
  document.querySelector('.websocket_offline').style.display = 'inline-block'
})

document.getElementById('message_admin').addEventListener('click', function (event) {
  event.preventDefault()
  const messageInput = document.getElementById("message")
  const messageValue = messageInput.value.trim()
  
  if (messageValue === '') return
  
  fetch('/chat-admin-add', {
    method: 'POST',
    headers: {
    'Content-Type': 'application/json'
    },
    body: messageValue
  })
  .then(response => response.json())
  .then(data => {
    if(data.error) {
      alert('Erreur lors de l\'envoi du message')
    } else {
      socket.send(JSON.stringify(data))
      alert('Message envoyé !')
    }
  })
})

$(document).ready(function () {
  $('#fetch-pinterest').click(function () {
    $.ajax({
      url: '{{ path("app_fetch_pinterest") }}',
      method: 'GET',
      dataType: 'json',
      success: function (data) {
        console.log('Foo: ' + data)
      },
    })
  })
})
</script>

{% endblock %}